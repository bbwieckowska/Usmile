usethis::use_mit_license("Barbara Więckowska")
warnings()
devtools::check()
setwd("~/1obliczenia/wieckowska/USmile/ShinyAppPublication/Usmile")
devtools::check()
usethis::use_mit_license("Barbara Więckowska")
devtools::document()
list.files("data")
load("data/heart_disease.rda")
load("data/heart_disease_train.rda")
# Sprawdź wszystkie pliki danych
check_objects <- function() {
files <- list.files("data", pattern = "\\.rda$", full.names = TRUE)
for(file in files) {
env <- new.env()
loaded_objects <- load(file, envir = env)
cat("File:", basename(file), "\n")
cat("Objects:", paste(loaded_objects, collapse = ", "), "\n")
cat("Object names match file names:",
all(loaded_objects == gsub("\\.rda$", "", basename(file))), "\n\n")
}
}
check_objects()
# Funkcja do naprawy nazw obiektów w plikach RData
fix_data_names <- function() {
files <- list.files("data", pattern = "\\.rda$", full.names = TRUE)
for(file in files) {
# Załaduj obiekt tymczasowo
env <- new.env()
loaded_objects <- load(file, envir = env)
# Spodziewana nazwa obiektu (taka jak nazwa pliku bez .rda)
expected_name <- gsub("\\.rda$", "", basename(file))
cat("Processing:", basename(file), "\n")
cat("  Loaded objects:", paste(loaded_objects, collapse = ", "), "\n")
# Jeśli obiekt nazywa się 'data', zmień jego nazwę
if ("data" %in% loaded_objects) {
cat("  Renaming 'data' to:", expected_name, "\n")
# Przypisz dane do właściwej nazwy
assign(expected_name, env$data)
# Zapisz z właściwą nazwą
save(list = expected_name, file = file)
cat("  Fixed!\n\n")
} else if (loaded_objects[1] == expected_name) {
cat("  Already correct\n\n")
} else {
cat("  Unexpected object names\n\n")
}
}
}
# Uruchom naprawę
fix_data_names()
devtools::check()
devtools::document()
install.packages("parallelly")
packageVersion("parallelly")
devtools::document()
devtools::check()
unlink("man", recursive = TRUE)
devtools::document()
devtools::check()
devtools::build()
system("R CMD Rd2pdf Usmile_0.0.1.tar.gz")
tools::Rd2pdf("./man", output = "Usmile-manual.pdf")
devtools::build_manual(path = ".")
git add .
devtools::install_github("bbwieckowska/Usmile")
library(Usmile)
data(heart_disease_train)
data(heart_disease_test)
heart_disease_train$disease <- as.factor(heart_disease_train$disease)
model_glm_ref <- glm(disease ~ 1, data = heart_disease_train,
family = "binomial")
model_glm_new <- glm(disease ~ ill_high_asym + age + cp, data = heart_disease_train,
family = "binomial")
# Calculate the U-smile coefficients on the train and test data set
results_train <- UScalc_mdl(model_glm_ref, model_glm_new, y_coef = "rLR")
results_test <- UScalc_mdl(model_glm_ref, model_glm_new, y_coef = "rLR", dataset = heart_disease_test, testing=TRUE)
# Generate the U-smile plot on the train and test data set
USplot(plot_data = results_train$plot_data, y_coef = "rLR", net = TRUE, crit = 2)
